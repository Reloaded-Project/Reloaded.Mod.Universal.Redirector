using System.Runtime.InteropServices;
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
#pragma warning disable CS1591

namespace Reloaded.Universal.Redirector.Lib.Utility.Native;

[StructLayout(LayoutKind.Sequential)]
public struct FILE_NETWORK_OPEN_INFORMATION : IEquatable<FILE_NETWORK_OPEN_INFORMATION>
{
    public long CreationTime;
    public long LastAccessTime;
    public long LastWriteTime;
    public long ChangeTime;
    public long AllocationSize;
    public long EndOfFile;
    public FileAttributes FileAttributes;

    // Autogenerated
    public bool Equals(FILE_NETWORK_OPEN_INFORMATION other)
    {
        return CreationTime == other.CreationTime && 
               LastAccessTime == other.LastAccessTime && 
               LastWriteTime == other.LastWriteTime && 
               ChangeTime == other.ChangeTime && 
               AllocationSize == other.AllocationSize && 
               EndOfFile == other.EndOfFile && 
               FileAttributes == other.FileAttributes;
    }

    public override bool Equals(object? obj)
    {
        return obj is FILE_NETWORK_OPEN_INFORMATION other && Equals(other);
    }

    public override int GetHashCode()
    {
        return HashCode.Combine(CreationTime, LastAccessTime, LastWriteTime, ChangeTime, AllocationSize, EndOfFile, (int)FileAttributes);
    }
}